version: '3.9'

services:
  postgres: # New PostgreSQL service
    image: postgres:15 # Using PostgreSQL version 15
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin # Replace with your desired username
      POSTGRES_PASSWORD: password # Replace with your desired strong password
      POSTGRES_DB: sphere_db # Replace with your desired database name
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432" # Exposes PostgreSQL on port 5432
    networks:
      - web # Or a new dedicated database network if you prefer

  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/certs:/certs"
      - "./traefik/traefik.yml:/traefik.yml:ro"
    networks:
      - web

  auronet-prod:
    build:
      context: .
      args:
        NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL:-http://placeholder.supabase.co}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY:-placeholderkey}
        SUPABASE_URL: ${SUPABASE_URL:-http://placeholder.supabase.co}
        SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY:-placeholderkey}
    container_name: auronet-prod
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://admin:password@postgres_db:5432/sphere_db # Updated DATABASE_URL
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
    depends_on: # Ensures PostgreSQL starts before the app
      - postgres
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prod-secure.rule=Host(`auroville.social`)"
      - "traefik.http.routers.prod-secure.entrypoints=websecure"
      - "traefik.http.routers.prod-secure.tls=true"
      - "traefik.http.routers.prod-secure.tls.certresolver=default"
      - "traefik.http.routers.prod.rule=Host(`auroville.social`)"
      - "traefik.http.routers.prod.entrypoints=web"
      - "traefik.http.routers.prod.middlewares=redirect-to-https"
      - "traefik.http.services.prod.loadbalancer.server.port=3000"
      - "traefik.http.services.prod.loadbalancer.healthcheck.path=/api/health"
      - "traefik.http.services.prod.loadbalancer.healthcheck.interval=10s"
      - "traefik.http.services.prod.loadbalancer.healthcheck.timeout=5s"
    networks:
      - web

networks:
  web:
    driver: bridge

volumes: # New volumes section
  postgres_data:
