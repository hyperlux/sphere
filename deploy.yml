name: Deploy to Staging

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    outputs:
      DEPLOY_DOMAIN: ${{ steps.set-env.outputs.DEPLOY_DOMAIN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Set environment variables
        id: set-env
        run: |
          echo "DEPLOY_DOMAIN=staging.auroville.social" >> $GITHUB_OUTPUT
          echo "SUPABASE_URL=${{ secrets.STAGING_SUPABASE_URL }}" >> $GITHUB_ENV
          echo "SUPABASE_ANON_KEY=${{ secrets.STAGING_SUPABASE_ANON_KEY }}" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npx tsc --noEmit

      - name: Lint check
        run: npm run lint

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ env.SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ env.SUPABASE_ANON_KEY }}

      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        if: github.event_name == 'push'
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        if: github.event_name == 'push'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/auronet:${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/auronet:${{ github.ref_name }}
          build-args: |
            NEXT_PUBLIC_SUPABASE_URL=${{ env.SUPABASE_URL }}
            NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ env.SUPABASE_ANON_KEY }}

  deploy:
    needs: test-and-build
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: staging
    env:
      DEPLOY_PATH: /opt/auronet
      DEPLOY_DOMAIN: ${{ needs.test-and-build.outputs.DEPLOY_DOMAIN }}
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ env.DEPLOY_PATH }}

            # Create branch-specific docker-compose file
            cat > docker-compose.${{ github.ref_name }}.yml << 'EOL'
            version: '3.9'
            services:
              traefik:
                image: traefik:v2.10
                container_name: traefik
                restart: unless-stopped
                security_opt:
                  - no-new-privileges:true
                ports:
                  - "80:80"
                  - "443:443"
                volumes:
                  - /var/run/docker.sock:/var/run/docker.sock:ro
                  - /opt/auronet/traefik/certs:/certs
                command:
                  - --global.sendAnonymousUsage=false
                  - --api.dashboard=false
                  - --providers.docker=true
                  - --providers.docker.exposedByDefault=false
                  - --entrypoints.web.address=:80
                  - --entrypoints.web.http.redirections.entryPoint.to=websecure
                  - --entrypoints.web.http.redirections.entryPoint.scheme=https