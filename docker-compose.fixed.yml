version: '3.9'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/certs:/certs"
      - "./traefik/traefik.yml:/traefik.yml:ro"
    networks:
      - web

  auronet-prod:
    image: lightvibrations/auronet:main
    container_name: auronet-prod
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgres://postgres.vrdzdeqkrxzowzcttsgn:${SUPABASE_SERVICE_ROLE_KEY}@aws-0-us-east-1.pooler.supabase.com:5432/postgres
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    labels:
      - "traefik.enable=true"
      # HTTPS router
      - "traefik.http.routers.prod-secure.rule=Host(`auroville.social`)"
      - "traefik.http.routers.prod-secure.entrypoints=websecure"
      - "traefik.http.routers.prod-secure.tls=true"
      - "traefik.http.routers.prod-secure.tls.certresolver=default"
      # HTTP router with redirect
      - "traefik.http.routers.prod.rule=Host(`auroville.social`)"
      - "traefik.http.routers.prod.entrypoints=web"
      - "traefik.http.routers.prod.middlewares=redirect-to-https"
      # Redirect middleware
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
      # Service configuration
      - "traefik.http.services.prod.loadbalancer.server.port=3000"
      - "traefik.http.services.prod.loadbalancer.healthcheck.path=/api/health"
      - "traefik.http.services.prod.loadbalancer.healthcheck.interval=30s"
      - "traefik.http.services.prod.loadbalancer.healthcheck.timeout=10s"
    networks:
      - web

networks:
  web:
    external: true
